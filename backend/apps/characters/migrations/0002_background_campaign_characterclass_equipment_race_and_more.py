# Generated by Django 4.2.7 on 2025-06-28 21:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('characters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('api_data', models.JSONField(blank=True, null=True)),
                ('skill_proficiencies', models.JSONField(default=list, help_text='Lista de skills')),
                ('tool_proficiencies', models.JSONField(default=list, help_text='Lista de tools')),
                ('languages', models.JSONField(default=list, help_text='Lista de idiomas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('starting_level', models.IntegerField(default=1)),
                ('max_level', models.IntegerField(default=20)),
                ('allow_multiclass', models.BooleanField(default=True)),
                ('point_buy_points', models.IntegerField(default=27)),
                ('homebrew_rules', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dm_campaigns', to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(blank=True, related_name='player_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('api_data', models.JSONField(blank=True, null=True)),
                ('hit_die', models.IntegerField(default=6, help_text='Tipo do dado de vida (6, 8, 10, 12)')),
                ('primary_ability', models.CharField(default='', help_text='Atributo prim√°rio', max_length=50)),
                ('saving_throw_proficiencies', models.JSONField(default=list, help_text='Lista de saving throws')),
                ('is_spellcaster', models.BooleanField(default=False)),
                ('spellcasting_ability', models.CharField(blank=True, help_text='Atributo para spellcasting', max_length=20)),
                ('spell_slots_type', models.CharField(choices=[('none', 'Non-Caster'), ('full', 'Full Caster'), ('half', 'Half Caster'), ('third', 'Third Caster'), ('warlock', 'Warlock (Pact Magic)')], default='none', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Character Class',
                'verbose_name_plural': 'Character Classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('equipment_type', models.CharField(choices=[('weapon', 'Weapon'), ('armor', 'Armor'), ('shield', 'Shield'), ('tool', 'Tool'), ('gear', 'Adventuring Gear'), ('magic_item', 'Magic Item')], max_length=20)),
                ('api_data', models.JSONField(blank=True, null=True)),
                ('cost', models.CharField(blank=True, max_length=50)),
                ('weight', models.FloatField(default=0)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Slug para buscar na Open5e API', unique=True)),
                ('name', models.CharField(max_length=100)),
                ('api_data', models.JSONField(blank=True, help_text='Cache dos dados da Open5e API', null=True)),
                ('strength_bonus', models.IntegerField(default=0)),
                ('dexterity_bonus', models.IntegerField(default=0)),
                ('constitution_bonus', models.IntegerField(default=0)),
                ('intelligence_bonus', models.IntegerField(default=0)),
                ('wisdom_bonus', models.IntegerField(default=0)),
                ('charisma_bonus', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='character',
            options={'ordering': ['-created_at'], 'verbose_name': 'Character', 'verbose_name_plural': 'Characters'},
        ),
        migrations.AddField(
            model_name='character',
            name='base_charisma',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)]),
        ),
        migrations.AddField(
            model_name='character',
            name='base_constitution',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)]),
        ),
        migrations.AddField(
            model_name='character',
            name='base_dexterity',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)]),
        ),
        migrations.AddField(
            model_name='character',
            name='base_intelligence',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)]),
        ),
        migrations.AddField(
            model_name='character',
            name='base_strength',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)]),
        ),
        migrations.AddField(
            model_name='character',
            name='base_wisdom',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(18)]),
        ),
        migrations.AddField(
            model_name='character',
            name='current_hp',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_1',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_2',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_3',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_4',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_5',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_6',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_7',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_8',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='current_spell_slots_9',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='custom_saving_throw_proficiencies',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='character',
            name='custom_skill_proficiencies',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='character',
            name='experience_points',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='max_hp',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='temporary_hp',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='character',
            name='level',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AddField(
            model_name='character',
            name='background',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='characters.background'),
        ),
        migrations.AddField(
            model_name='character',
            name='character_class',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='characters.characterclass'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='character',
            name='race',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='characters.race'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='ClassLevelProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('proficiency_bonus', models.IntegerField(default=2)),
                ('spell_slots_0', models.IntegerField(default=0, help_text='Cantrips conhecidos')),
                ('spell_slots_1', models.IntegerField(default=0)),
                ('spell_slots_2', models.IntegerField(default=0)),
                ('spell_slots_3', models.IntegerField(default=0)),
                ('spell_slots_4', models.IntegerField(default=0)),
                ('spell_slots_5', models.IntegerField(default=0)),
                ('spell_slots_6', models.IntegerField(default=0)),
                ('spell_slots_7', models.IntegerField(default=0)),
                ('spell_slots_8', models.IntegerField(default=0)),
                ('spell_slots_9', models.IntegerField(default=0)),
                ('cantrips_known', models.IntegerField(default=0)),
                ('spells_known', models.IntegerField(default=0, help_text="Para classes que 'conhecem' feiti√ßos")),
                ('features_gained', models.JSONField(default=list, help_text='Lista de features/habilidades')),
                ('character_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_progression', to='characters.characterclass')),
            ],
            options={
                'verbose_name': 'Class Level Progression',
                'verbose_name_plural': 'Class Level Progressions',
                'ordering': ['character_class', 'level'],
                'unique_together': {('character_class', 'level')},
            },
        ),
        migrations.CreateModel(
            name='CharacterSpell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spell_slug', models.CharField(help_text='Slug do feiti√ßo na Open5e API', max_length=100)),
                ('spell_name', models.CharField(max_length=100)),
                ('spell_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('is_prepared', models.BooleanField(default=True, help_text='False para conhecidos mas n√£o preparados')),
                ('is_known', models.BooleanField(default=True, help_text='Se o personagem conhece este feiti√ßo')),
                ('api_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spells', to='characters.character')),
            ],
            options={
                'ordering': ['spell_level', 'spell_name'],
                'unique_together': {('character', 'spell_slug')},
            },
        ),
        migrations.CreateModel(
            name='CharacterEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('is_equipped', models.BooleanField(default=False)),
                ('is_attuned', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='characters.character')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.equipment')),
            ],
            options={
                'unique_together': {('character', 'equipment')},
            },
        ),
        migrations.CreateModel(
            name='CampaignCharacter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.campaign')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.character')),
            ],
            options={
                'unique_together': {('campaign', 'character')},
            },
        ),
    ]
